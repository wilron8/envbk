/*
 * File: envitz/controller/Message.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.controller.Message', {
	extend: 'Ext.app.Controller',

	refs: [
		{
			ref: 'subject',
			selector: '#subject'
		},
		{
			ref: 'msgForm',
			selector: '#msgForm'
		}
	],

	onFormAfterMessageRender: function(component, eOpts) {
		var subject,
			label;

		this.getMsgForm().getForm().setValues(LApp.formData);

		if(LApp.isReply === true){
			subject = this.getSubject();
			subject.removeAll();

			label = Ext.create('Ext.form.Label',{
				text: LApp.formData.msg_subject
			});
			subject.add(label);
		}
	},

	onBtnSubmitMessageClick: function(button, e, eOpts) {
		if (this.getMsgForm().down('#msg_body').isDirty()) {

			if (LApp.isReply === true) {
				this.getMsgForm().getForm().submit({
					url: LApp.basePath+'/message/new',
					standardSubmit: true,
					params: {
						msg_subject: LApp.formData.msg_subject,
						msg_threadID: LApp.formData.msg_threadID
					}
				});

			}else{

				this.getMsgForm().getForm().submit({
					url: LApp.basePath + '/message/new',
					standardSubmit: true
				});
			}

		} else {
			Alert("Information", "Do you have a message?");

		}
	},

	onBtnCancelMessageClick: function(button, e, eOpts) {
		window.location = LApp.basePath+'/message';
	},

	onBtnResetMessageClick: function(button, e, eOpts) {
		 this.getMsgForm().down('#recipients').setValue(LApp.formData['recipients[]']);
		 this.getMsgForm().down('#msg_body').setValue('');
	},

	init: function(application) {
		this.control({
			"#msgForm": {
				afterrender: this.onFormAfterMessageRender
			},
			"#btnSubmitMessage": {
				click: this.onBtnSubmitMessageClick
			},
			"#btnCancelMessage": {
				click: this.onBtnCancelMessageClick
			},
			"#btnResetMessage": {
				click: this.onBtnResetMessageClick
			}
		});
	}

});
