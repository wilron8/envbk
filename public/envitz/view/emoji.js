/*
 * File: envitz/view/emoji.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.emoji', {
	extend: 'Ext.Component',
	alias: 'widget.emojipicker',

	alternateClassName: [
		'emojiPalette'
	],
	requires: [
		'Ext.XTemplate'
	],

	clickEvent: 'click',
	selectedCls: 'emoji-picker-selected',
	itemCls: 'emoji-picker-item',
	enablePeople: true,
	enablePlaces: true,
	enableNature: true,
	enableObject: true,
	enableSports: true,
	enableFood: true,
	enableAstrology: true,
	enableSymbol: true,
	enableTime: true,
	enableNumber: true,
	emojiRe: '/(?:^|s)emoji-(?:s|$)/',
	allowReselect: false,
	componentCls: 'emoji-picker',
	resizable: false,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			value: null,
			emoji: {
				/*   http://www.emoji-cheat-sheet.com/*/PEOPLE: [
					':smiley:',
					':smile:',
					':blush:',
					':smirk:',
					':wink:',
					':heart_eyes:',
					':grin:',
					':relieved:',
					':frowning:',
					':anguished:',
					':unamused:',
					':confused:',
					':cry:',
					':imp:',
					':smiling_imp:',
					':trollface:',
					':rage:',
					':anger:',
					':sparkles:',
					':star:',
					':boom:',
					':exclamation:',
					':question:',
					':zzz:',
					':dash:',
					':musical_note:',
					':fire:',
					':poop:',
					':+1:',
					':-1:',
					':ok_hand:',
					':punch:',
					':fist:',
					':v:',
					':wave:',
					':hand:',
					':point_up:',
					':point_down:',
					':point_left:',
					':point_right:',
					':point_up_2:',
					':clap:',
					':muscle:',
					':walking:',
					':running:',
					':feet:',
					':ear:',
					':eyes:',
					':lips:',
					':speech_balloon:'
				],
				NATURE: [
					':sunny:',
					':cloud:',
					':partly_sunny:',
					':umbrella:',
					':zap:',
					':snowflake:',
					':snowman:',
					':cyclone:',
					':globe_with_meridians:',
					':earth_americas:',
					':earth_africa:',
					':earth_asia:',
					':milky_way:',
					':moon:',
					':waning_gibbous_moon:',
					':waxing_gibbous_moon:',
					':first_quarter_moon:',
					':last_quarter_moon:'
				],
				OBJECT: [
					':christmas_tree:',
					':gift:',
					':tada:',
					':no_bell:',
					':bell:',
					':balloon:',
					':crystal_ball:',
					':cd:',
					':dvd:',
					':floppy_disk:',
					':camera:',
					':movie_camera:',
					':computer:',
					':iphone:',
					':tv:',
					':telephone:',
					':sound:',
					':mute:',
					':hourglass:',
					':watch:',
					':satellite:',
					':loop:',
					':mag:',
					':mag_right:',
					':unlock:',
					':lock:',
					':closed_lock_with_key:',
					':key:',
					':bulb:',
					':flashlight:',
					':electric_plug:',
					':battery:',
					':email:',
					':envelope:',
					':shower:',
					':toilet:',
					':wrench:',
					':nut_and_bolt:',
					':hammer:',
					':moneybag:',
					':credit_card:',
					':bomb:',
					':gun:',
					':hocho:',
					':pill:',
					':syringe:',
					':bar_chart:',
					':chart_with_upwards_trend:',
					':chart_with_downwards_trend:',
					':clipboard:',
					':date:',
					':scissors:',
					':paperclip:',
					':pushpin:',
					':pencil2:',
					':triangular_ruler:',
					':closed_book:',
					':green_book:',
					':blue_book:',
					':orange_book:',
					':notebook:',
					':microscope:',
					':telescope:',
					':spades:',
					':hearts:',
					':clubs:',
					':diamonds:',
					':black_joker:',
					':gem:',
					':ring:',
					':trophy:',
					':game_die:',
					':dart:',
					':mahjong:',
					':art:'
				],
				PLACES: [
					':house:',
					':house_with_garden:',
					':school:',
					':office:',
					':post_office:',
					':hospital:',
					':bank:',
					':convenience_store:',
					':hotel:',
					':city_sunrise:',
					':city_sunset:',
					':japanese_castle:',
					':european_castle:',
					':factory:',
					':tent:',
					':circus_tent:',
					':tokyo_tower:',
					':mount_fuji:',
					':sunrise_over_mountains:',
					':sunrise:',
					':stars:',
					':rainbow:',
					':roller_coaster:',
					':ship:',
					':boat:',
					':anchor:',
					':rocket:',
					':airplane:',
					':helicopter:',
					':railway_car:',
					':bike:',
					':car:',
					':taxi:',
					':bus:',
					':rotating_light:',
					':police_car:',
					':fire_engine:',
					':ambulance:',
					':minibus:',
					':truck:',
					':vertical_traffic_light:',
					':traffic_light:',
					':warning:',
					':construction:',
					':atm:',
					':barber:',
					':hotsprings:',
					':performing_arts:',
					':round_pushpin:',
					':triangular_flag_on_post:',
					':crossed_flags:',
					':checkered_flag:',
					':jp:',
					':us:',
					':cn:',
					':gb:',
					':kr:',
					':fr:',
					':es:',
					':it:',
					':ru:',
					':de:'
				],
				SPORTS: [
					':bicyclist:',
					':horse_racing:',
					':swimmer:',
					':surfer:',
					':ski:',
					':snowboarder:',
					':football:',
					':basketball:',
					':soccer:',
					':baseball:',
					':tennis:',
					':rugby_football:',
					':bowling:',
					':8ball:',
					':golf:'
				],
				FOOD: [
					':coffee:',
					':tea:',
					':sake:',
					':baby_bottle:',
					':beer:',
					':beers:',
					':cocktail:',
					':tropical_drink:',
					':wine_glass:',
					':fork_and_knife:',
					':pizza:',
					':hamburger:',
					':fries:',
					':poultry_leg:',
					':meat_on_bone:',
					':spaghetti:',
					':curry:',
					':fried_shrimp:',
					':bento:',
					':sushi:',
					':fish_cake:',
					':rice_ball:',
					':rice:',
					':ramen:',
					':stew:',
					':oden:',
					':dango:',
					':egg:',
					':bread:',
					':doughnut:',
					':custard:',
					':icecream:',
					':ice_cream:',
					':shaved_ice:',
					':birthday:',
					':cake:',
					':cookie:',
					':chocolate_bar:',
					':candy:',
					':lollipop:',
					':honey_pot:',
					':apple:',
					':green_apple:',
					':tangerine:',
					':lemon:',
					':cherries:',
					':grapes:',
					':watermelon:',
					':strawberry:',
					':peach:',
					':melon:',
					':banana:',
					':pear:',
					':pineapple:',
					':sweet_potato:',
					':eggplant:',
					':tomato:',
					':corn:'
				],
				NUMBER: [
					':one:',
					':two:',
					':three:',
					':four:',
					':five:',
					':six:',
					':seven:',
					':eight:',
					':nine:',
					':zero:',
					':keycap_ten:',
					':1234:'
				],
				TIME: [
					':clock1:',
					':clock2:',
					':clock3:',
					':clock4:',
					':clock5:',
					':clock6:',
					':clock7:',
					':clock8:',
					':clock9:',
					':clock10:',
					':clock11:',
					':clock12:',
					':clock130:',
					':clock230:',
					':clock330:',
					':clock430:',
					':clock530:',
					':clock630:',
					':clock730:',
					':clock830:',
					':clock930:',
					':clock1030:',
					':clock1130:',
					':clock1230:',
					':clock1230:'
				],
				ASTROLOGY: [
					':aries:',
					':taurus:',
					':gemini:',
					':cancer:',
					':leo:',
					':virgo:',
					':libra:',
					':scorpius:',
					':sagittarius:',
					':capricorn:',
					':aquarius:',
					':pisces:',
					':ophiuchus:',
					':six_pointed_star:'
				],
				SYMBOL: [
					':hash:',
					':symbols:',
					':capital_abcd:',
					':arrow_backward:',
					':arrow_forward:',
					':arrow_up:',
					':arrow_down:',
					':arrow_lower_left:',
					':arrow_lower_right:',
					':arrow_right:',
					':arrow_left:',
					':arrow_upper_left:',
					':arrow_upper_right:',
					':arrow_double_down:',
					':arrow_double_up:',
					':arrow_down_small:',
					':arrow_heading_down:',
					':arrow_heading_up:',
					':leftwards_arrow_with_hook:',
					':arrow_right_hook:',
					':left_right_arrow:',
					':arrow_up_down:',
					':arrow_up_small:',
					':arrows_counterclockwise:',
					':rewind:',
					':fast_forward:',
					':information_source:',
					':ok:',
					':twisted_rightwards_arrows:',
					':repeat:',
					':repeat_one:',
					':new:',
					':top:',
					':up:',
					':cool:',
					':free:',
					':ng:',
					':cinema:',
					':signal_strength:',
					':restroom:',
					':mens:',
					':womens:',
					':baby_symbol:',
					':no_smoking:',
					':parking:',
					':wheelchair:',
					':metro:',
					':baggage_claim:',
					':potable_water:',
					':m:',
					':passport_control:',
					':customs:',
					':left_luggage:',
					':ideograph_advantage:',
					':no_entry_sign:',
					':sos:',
					':id:',
					':underage:',
					':children_crossing:',
					':no_entry:',
					':eight_spoked_asterisk:',
					':eight_pointed_black_star:',
					':heart_decoration:',
					':vs:',
					':chart:',
					':currency_exchange:',
					':negative_squared_cross_mark:',
					':a:',
					':b:',
					':ab:',
					':o2:',
					':diamond_shape_with_a_dot_inside:',
					':recycle:',
					':end:',
					':soon:',
					':on:',
					':heavy_dollar_sign:',
					':copyright:',
					':registered:',
					':tm:',
					':x:',
					':heavy_exclamation_mark:',
					':bangbang:',
					':interrobang:',
					':o:',
					':heavy_multiplication_x:',
					':heavy_plus_sign:',
					':heavy_minus_sign:',
					':heavy_division_sign:',
					':white_flower:',
					':100:',
					':heavy_check_mark:',
					':ballot_box_with_check:',
					':radio_button:',
					':link:',
					':curly_loop:',
					':wavy_dash:',
					':part_alternation_mark:',
					':trident:',
					':white_check_mark:',
					':black_square:',
					':white_large_square:',
					':black_square_button:',
					':white_square_button:',
					':black_circle:',
					':white_circle:',
					':red_circle:',
					':large_blue_circle:',
					':large_blue_diamond:',
					':large_orange_diamond:',
					':small_blue_diamond:',
					':small_orange_diamond:',
					':small_red_triangle:',
					':small_red_triangle_down:'
				]
			},
			renderTpl: [
				'<tpl for="emoji">',
				'<a href="#" role="button" class="emoji-{.} {parent.itemCls}" hidefocus="on">',
				'<span class="{parent.itemCls}-inner" style="background:#{.}">&#160;</span>',
				'</a>',
				'</tpl>',
				''
			],
			listeners: {
				select: {
					fn: me.handleClick,
					scope: me
				},
				render: {
					fn: me.onRender,
					scope: me
				},
				afterrender: {
					fn: me.afterRender,
					scope: me
				}
			}
		});

		me.callParent(arguments);
	},

	handleClick: function(component) {
		var me = this,
			emoji;

		event.stopEvent();
		if (!me.disabled) {
			emoji = target.className.match(me.emojiRe)[1];
			me.select(emoji);
		}
	},

	onRender: function(component, eOpts) {
		var me = this,
			clickEvent = me.clickEvent;

		me.callParent(arguments);

		me.mon(me.el, clickEvent, me.handleClick, me, {delegate: 'a'});

		// always stop following the anchors
		if(clickEvent != 'click'){
			me.mon(me.el, 'click', Ext.emptyFn, me, {delegate: 'a', stopEvent: true});
		}
	},

	afterRender: function(component, eOpts) {
		var me = this,
			value;

		me.callParent(arguments);

		if (me.value) {
			value = me.value;
			me.value = null;
			me.select(value, true);
		}
	},

	select: function(emoji, suppressEvent) {
		//modeled after:  http://docs.sencha.com/extjs/4.2.2/source/Color2.html#Ext-picker-Color
		//Emoji based:  https://github.com/arvida/emoji-cheat-sheet.com


		/**
		* Selects the specified emoji in the picker (fires the {@link #event-select} event)
		* @param {String} emoji - A valid emoji code (: will be stripped if included)
		* @param {Boolean} [suppressEvent=false] True to stop the select event from firing.
		*/


		var me = this,
			selectedCls = me.selectedCls,
			value = me.value,
			el;

		emoji = emoji.replace(':', '');
		if (!me.rendered) {
			me.value = emoji;
			return;
		}


		if (emoji != value || me.allowReselect) {
			el = me.el;

			if (me.value) {
				el.down('a.emoji-' + value).removeCls(selectedCls);
			}
			el.down('a.emoji-' + emoji).addCls(selectedCls);
			me.value = emoji;
			if (suppressEvent !== true) {
				me.fireEvent('select', me, emoji);
			}
		}
	},

	clear: function() {
		/**
		* Clears any selection and sets the value to `null`.
		*/
		var me = this,
			value = me.value,
			el;

		if (value && me.rendered) {
			el = me.el.down('a.emoji-' + value);
			el.removeCls(me.selectedCls);
		}
		me.value = null;
	},

	getValue: function() {
		/**
		* Get the currently selected emoji value.
		* @return {String} value The selected value. Null if nothing is selected.
		*/
		return this.value || null;
	},

	initRenderData: function() {
		var me = this;
		return Ext.apply(me.callParent(), {
			itemCls: me.itemCls,
			emoji: me.emoji //TODO: use function to return array of emoji that are enabled per passed config
		});
	}

});