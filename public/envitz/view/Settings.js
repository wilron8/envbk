/*
 * File: envitz/view/Settings.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.Settings', {
	extend: 'Ext.container.Container',

	requires: [
		'envitz.view.userAddress',
		'envitz.view.ComboSearchMultiFields',
		'envitz.view.PasswordMeter',
		'envitz.view.securityQuestionAnswer',
		'Ext.form.Label',
		'Ext.tab.Panel',
		'Ext.form.Panel',
		'Ext.tab.Tab',
		'Ext.form.field.Display',
		'Ext.form.field.ComboBox',
		'Ext.view.View',
		'Ext.XTemplate',
		'envitz.view.AccountTermination'
	],

	border: false,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'label',
					style: {
						fontSize: 'large'
					},
					text: 'Account Settings'
				},
				{
					xtype: 'tabpanel',
					tabBar: {
						xtype: 'tabbar',
						border: 0,
						minWidth: 100,
						plain: true,
						layout: {
							type: 'hbox',
							align: 'stretch',
							pack: 'end'
						}
					},
					border: 0,
					itemId: 'settingsTabPanel',
					defaults: {
						anchor: '100%'
					},
					activeTab: 0,
					minTabWidth: 100,
					plain: true,
					items: [
						{
							xtype: 'form',
							itemId: 'settingsForm',
							defaults: {
								//anchor: '100%',
								padding: '5px'
							},
							bodyBorder: true,
							title: 'Edit',
							items: [
								{
									xtype: 'container',
									layout: {
										type: 'hbox',
										align: 'middle'
									},
									items: [
										{
											xtype: 'displayfield',
											itemId: 'userAccount',
											fieldLabel: 'User Account',
											name: 'account'
										},
										{
											xtype: 'label',
											margins: '0 0 0 5',
											style: {
												textDecoration: 'italic'
											},
											text: '(Select primary email at Emails)'
										}
									]
								},
								{
									xtype: 'container',
									layout: {
										type: 'hbox',
										align: 'stretch',
										defaultMargins: {
											top: 0,
											right: 10,
											bottom: 0,
											left: 0
										}
									},
									items: [
										me.processFirstName({
											xtype: 'textfield',
											showClear: true,
											flex: 1,
											fieldLabel: 'Full Name',
											name: 'usr_fName',
											allowBlank: false,
											blankText: 'Please type in your First name.',
											emptyText: 'First Name',
											enforceMaxLength: true,
											maxLength: 128,
											minLength: 1,
											selectOnFocus: true
										}),
										{
											xtype: 'textfield',
											plugins: '',
											flex: 1,
											name: 'usr_mName',
											emptyText: 'Middle ( Optional )',
											enforceMaxLength: true,
											maxLength: 64,
											selectOnFocus: true
										},
										{
											xtype: 'textfield',
											showClear: true,
											flex: 1,
											name: 'usr_lName',
											allowBlank: false,
											blankText: 'Please type in your Last name',
											emptyText: 'Last Name',
											enforceMaxLength: true,
											maxLength: 128,
											minLength: 1,
											selectOnFocus: true
										}
									]
								},
								{
									xtype: 'userAddress'
								},
								{
									xtype: 'container',
									itemId: 'joinPhones1',
									items: [
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch',
												defaultMargins: {
													top: 0,
													right: 10,
													bottom: 0,
													left: 0
												}
											},
											items: [
												{
													xtype: 'combobox',
													itemId: '',
													maxWidth: 250,
													minWidth: 200,
													fieldLabel: 'Telephone',
													name: 'uPhon_type',
													value: 'Primary',
													allowBlank: false,
													emptyText: 'Type',
													maskRe: /[\w\-\+_A-Za-z0-9\.]/,
													queryMode: 'local',
													store: 'phoneType',
													valueField: 'id'
												},
												{
													xtype: 'textfield',
													maxWidth: 100,
													width: 90,
													name: 'uPhon_countryCode',
													emptyText: 'Country Code',
													enforceMaxLength: true,
													maskRe: /[\w\-\+0-9\.]/,
													maxLength: 16
												},
												{
													xtype: 'combobox',
													maxWidth: 100,
													width: 90,
													name: 'uPhon_areaCode',
													emptyText: 'Area Code',
													enforceMaxLength: true,
													maskRe: /[\w\-\+0-9\.]/,
													maxLength: 16,
													queryDelay: 150,
													queryMode: 'local',
													store: 'phoneAreaCode',
													valueField: 'text'
												},
												{
													xtype: 'textfield',
													flex: 1,
													itemId: 'joinPhoneNumber',
													maxWidth: 200,
													width: 200,
													name: 'uPhon_number',
													emptyText: '989-7654',
													enforceMaxLength: true,
													maskRe: /[\w\-\+0-9\.]/,
													maxLength: 32,
													selectOnFocus: true
												}
											]
										}
									]
								},
								me.processLang({
									xtype: 'combosearchmultifields',
									searchFields: [
										'geoLang_name',
										'geoLang_roman',
										'geoLang_ISO639'
									],
									maxHeight: 200,
									minWidth: 300,
									fieldLabel: 'Language',
									name: 'usr_lang',
									allowBlank: false,
									emptyText: 'Select Language',
									enforceMaxLength: false,
									displayField: 'geoLang_name',
									store: 'languages',
									valueField: 'geoLang_id',
									valueNotFoundText: 'Language not supported, please select from this list'
								}),
								{
									xtype: 'textfield',
									maxWidth: 290,
									minWidth: 100,
									width: 290,
									fieldLabel: 'Current Password',
									name: 'myPassword',
									inputType: 'password',
									blankText: 'Your password will not change if this is blank.',
									emptyText: '********',
									enforceMaxLength: true,
									maxLength: 64,
									minLength: 8,
									selectOnFocus: true
								},
								{
									xtype: 'passwordMeter'
								},
								{
									xtype: 'container',
									layout: {
										type: 'hbox',
										align: 'stretch'
									},
									items: [
										{
											xtype: 'container',
											items: [
												{
													xtype: 'displayfield',
													fieldLabel: 'Emails'
												}
											]
										},
										{
											xtype: 'dataview',
											flex: 1,
											itemId: 'emailListView',
											tpl: Ext.create('Ext.XTemplate', 
												'<table id="email_form_list" class="email-list">',
												'	<tr>',
												'		<td></td>',
												'		<td>Verified</td>',
												'		<td>Primary</td>',
												'		<td>',
												'		</td>',
												'	</tr>',
												'	<tpl for=".">',
												'		<tr class="item">',
												'			<td>{uEmail_email}</td>',
												'			<td>',
												'				<tpl if="uEmail_isVerified==1">',
												'					Yes',
												'				<tpl else>',
												'					No <span class="reverifyEmail" style="text-decoration:underline;cursor:pointer;" value="{uEmail_email}" >(resend)</span>',
												'				</tpl>',
												'			</td>',
												'			<td>',
												'					<tpl if="uEmail_isVerified==1">',
												'						<input class="isPrimaryEmail" type="radio" value="{uEmail_email} " name = "primaryRadio" {[this.isChecked(values.isPrimary)]} />',
												'					</tpl>',
												'			</td>',
												'			<td><span class="icon-delete" style="text-decoration:underline;cursor:pointer;"><span class="deleteEmail" style="display:inline-block;height:16px;width:16px;" value="{uEmail_email}"></span></span>',
												'			</td>',
												'		</tr>',
												'	</tpl>',
												'	<tr>',
												'		<td><input style="width:200px;margin-bottom:0;" class="x-form-field x-form-text" placeholder="Type additional email address" type="text" id="EmailInput" /></td>',
												'		<td></td>',
												'		<td></td>',
												'		<td>',
												'			<span class="cancelEmail icon-delete" style="text-decoration:underline;cursor:pointer;"></span> <span class="addEmail icon-plus" style="text-decoration:underline;cursor:pointer;"></span>',
												'		</td>',
												'	</tr>',
												'</table>',
												{
													isChecked: function(isPrimary) {
														if (isPrimary === true) {
															return "checked='checked'";
														} else {
															return "";
														}
													}
												}
											),
											itemSelector: 'tr.item',
											store: 'emails'
										}
									]
								},
								{
									xtype: 'securityQuestionAnswer'
								}
							]
						},
						{
							xtype: 'panel',
							itemId: 'PreviewPanel',
							bodyBorder: false,
							frameHeader: false,
							title: 'Preview',
							items: [
								{
									xtype: 'form',
									border: false,
									itemId: 'PreviewForm',
									bodyPadding: 10,
									header: false,
									title: 'My Form',
									items: [
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'middle'
											},
											items: [
												{
													xtype: 'displayfield',
													fieldLabel: 'User account',
													name: 'account',
													value: 'Display Field'
												},
												{
													xtype: 'label',
													text: '(Primary email address)'
												}
											]
										},
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'displayfield',
													fieldLabel: 'Full name',
													name: 'usr_fName',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													margin: '0 0 0 5',
													fieldLabel: '',
													name: 'usr_mName',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													flex: 1,
													margin: '0 0 0 5',
													fieldLabel: '',
													name: 'usr_lName',
													value: 'Display Field'
												}
											]
										},
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'container',
													width: 105,
													items: [
														{
															xtype: 'label',
															width: 100,
															text: 'Address:'
														}
													]
												},
												{
													xtype: 'container',
													layout: {
														type: 'vbox',
														align: 'stretch'
													},
													items: [
														{
															xtype: 'container',
															layout: {
																type: 'hbox',
																align: 'stretch'
															},
															items: [
																{
																	xtype: 'displayfield',
																	fieldLabel: '',
																	name: 'uAddr_address1',
																	value: 'Display Field'
																},
																{
																	xtype: 'displayfield',
																	margins: '0 0 0 5',
																	fieldLabel: '',
																	name: 'uAddr_address2',
																	value: 'Display Field'
																}
															]
														},
														{
															xtype: 'container',
															layout: {
																type: 'hbox',
																align: 'stretch'
															},
															items: [
																{
																	xtype: 'displayfield',
																	fieldLabel: '',
																	name: 'uAddr_city',
																	value: 'Display Field'
																},
																{
																	xtype: 'displayfield',
																	margins: '0 0 0 5',
																	fieldLabel: '',
																	name: 'uAddr_state',
																	value: 'Display Field'
																},
																{
																	xtype: 'displayfield',
																	margins: '0 0 0 5',
																	fieldLabel: '',
																	name: 'uAddr_ZIP',
																	value: 'Display Field'
																},
																{
																	xtype: 'displayfield',
																	flex: 1,
																	margins: '0 0 0 5',
																	itemId: 'countryDisplay',
																	minWidth: 300,
																	fieldLabel: '',
																	name: 'uAddr_country',
																	listeners: {
																		beforerender: {
																			fn: me.onDisplayfieldBeforeRender,
																			scope: me
																		}
																	}
																}
															]
														}
													]
												}
											]
										},
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'label',
													flex: 1,
													maxWidth: 105,
													width: 105,
													text: 'Telephone:'
												},
												{
													xtype: 'displayfield',
													itemId: 'phoneType',
													fieldLabel: '',
													name: 'uPhon_type',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													margins: '0 0 0 5',
													fieldLabel: '',
													name: 'uPhon_countryCode',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													margin: '0 0 0 5',
													fieldLabel: '',
													name: 'uPhon_areaCode',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													margin: '0 0 0 5',
													fieldLabel: '',
													name: 'uPhon_number',
													value: 'Display Field'
												}
											]
										},
										{
											xtype: 'container',
											items: [
												{
													xtype: 'displayfield',
													itemId: 'languageDisplay',
													fieldLabel: 'Language',
													name: 'usr_lang',
													value: 'Display Field'
												}
											]
										},
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'container',
													items: [
														{
															xtype: 'displayfield',
															fieldLabel: 'Emails'
														}
													]
												},
												{
													xtype: 'container',
													itemId: 'email_table_preview',
													width: 9758,
													layout: {
														type: 'vbox',
														align: 'stretch'
													}
												}
											]
										},
										{
											xtype: 'container',
											items: [
												{
													xtype: 'displayfield',
													fieldLabel: 'Secret Question',
													name: 'usr_secretQ',
													value: 'Display Field'
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					xtype: 'container',
					margin: '30 0 0 100',
					padding: 5,
					items: [
						{
							xtype: 'button',
							itemId: 'btnSubmitSettings',
							minWidth: 100,
							text: 'Ok'
						},
						{
							xtype: 'button',
							itemId: 'btnResetSettings',
							margin: '0 0 0 20',
							minWidth: 100,
							text: 'Cancel'
						}
					]
				}
			]
		});

		me.callParent(arguments);
	},

	processFirstName: function(config) {
		config.fieldLabel = LApp.t('full_name');
		return config;
	},

	processLang: function(config) {
		var store = Ext.StoreMgr.lookup('languages');

		store.clearFilter(true);
		store.filter('geoLang_isSupported',1);

		config.store=store;

		return config;
	},

	onDisplayfieldBeforeRender: function(component, eOpts) {
		console.log(component.getValue());
	}

});