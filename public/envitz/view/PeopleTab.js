/*
 * File: envitz/view/PeopleTab.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.PeopleTab', {
	extend: 'Ext.tab.Panel',

	requires: [
		'Ext.panel.Panel',
		'Ext.tab.Tab'
	],

	border: 0,
	minWidth: 700,
	activeTab: 0,
	minTabWidth: 100,
	plain: true,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			tabBar: {
				xtype: 'tabbar',
				border: 0,
				minWidth: 100,
				plain: true,
				layout: {
					type: 'hbox',
					align: 'stretch',
					pack: 'end'
				}
			},
			defaults: {
				anchor: '100%'
			},
			items: [
				me.processFollowing({
					xtype: 'panel',
					border: false,
					loader: {
						url: '/people/part/'+me.personId+'/following',
						scripts: true,
						autoLoad: true,
						renderer: 'html'
					},
					padding: 15,
					autoScroll: true,
					layout: 'fit',
					title: 'Following'
				}),
				me.processFollowers({
					xtype: 'panel',
					border: false,
					loader: {
						url: '/people/part/'+me.personId+'/follower',
						scripts: true,
						autoLoad: true,
						renderer: 'html'
					},
					padding: 15,
					title: 'Followers'
				}),
				me.processIdeas({
					xtype: 'panel',
					border: false,
					loader: {
						url: '/people/part/'+me.personId+'/idea',
						scripts: true,
						autoLoad: true,
						renderer: 'html'
					},
					padding: 15,
					title: 'Ideas'
				}),
				me.processProjects({
					xtype: 'panel',
					border: false,
					loader: {
						url: '/people/part/'+me.personId+'/project',
						scripts: true,
						autoLoad: true,
						renderer: 'html'
					},
					padding: 15,
					title: 'Projects'
				})
			]
		});

		me.callParent(arguments);
	},

	processFollowing: function(config) {
		config.title = config.title + '('+LApp.page.followingCnt+')';
		return config;
	},

	processFollowers: function(config) {
		config.title = config.title + '('+LApp.page.followerCnt+')';
		return config;
	},

	processIdeas: function(config) {
		config.title = config.title + '('+LApp.page.ideaCnt+')';
		return config;
	},

	processProjects: function(config) {
		config.title = config.title + '('+LApp.page.projectCnt+')';
		return config;
	}

});