/*
 * File: envitz/view/ReLogin.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.ReLogin', {
	extend: 'Ext.window.Window',

	requires: [
		'Ext.form.Panel',
		'Ext.form.field.Text',
		'Ext.button.Button'
	],

	maxHeight: 400,
	maxWidth: 400,
	layout: 'fit',
	title: 'User Login',
	modal: true,	
	closable: false,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'form',
					border: false,
					bodyPadding: 10,
					header: false,
					title: 'My Login Form',
					items: [
						{
							xtype: 'textfield',
							anchor: '100%',
							margin: '15 0 15 0',
							maxWidth: 300,
							width: 300,
							fieldLabel: 'Enter your email address:',
							labelAlign: 'top',
							name: 'usr_username',
							inputType: 'email',
							allowBlank: false,
							vtype: 'email',
							vtypeText: 'Please type a valid email.'
						},
						{
							xtype: 'textfield',
							anchor: '100%',
							margin: '10 0 15 0',
							maxWidth: 300,
							width: 300,
							fieldLabel: 'Enter your password:',
							labelAlign: 'top',
							name: 'usr_password',
							inputType: 'password',
							allowBlank: true
						},
						{
							xtype: 'hiddenfield',
							name: 'rememberme',
							inputType: 'checkbox',
							value: '1'
						},
						{
							xtype: 'button',
							handler: function(button, e) {
								//TODO: we should use the Ext.Msg.prompt() method here since we have no further advaced processing here...
								//		We simply don't need a window call when prompt will perform the same utility.

								var form = button.up('form').getForm();

								form.submit({
									waitMsg:'validating...',
									url:LApp.basePath+'/signin/',
									success: function (form, action) {
										var svrMsg = Ext.JSON.decode(action.response.responseText);
										console.log(svrMsg.statusmsg);
										console.log(svrMsg.sessioncurr);
										/*me.removeAll();
										me.add({
											xtype: 'label',
											html: svrMsg.msg,
											padding: '10 0 0 10',
											style: {
												backgroundColor: 'white',
												display: 'block'
											}
										});*/
										me.hide();

										//console.log('response: '+action.response.responseText);
									},

									failure: function (form,action) {
										var svrMsg = Ext.JSON.decode(action.response.responseText);
										//me.down('#msg').setText(svrMsg.msg);										
										Ext.Msg.alert('Message Response', svrMsg.statusmsg);
										console.log(svrMsg.sessioncurr);
										//console.log(me.down('#msg'));
										//Ext.getCmp('#msg').setText(svrMsg.msg);
										//Ext.form.Label('')
										//me.down('#msg').setText(svrMsg.msg);
										//console.log(svrMsg);
										
									}

								});
							},
							formBind: true,
							disabled: false,
							margin: '0 10 0 105',
							width: 60,
							name: 'submit',
							text: 'Login'
						}
					]
				}
			]
		});

		me.callParent(arguments);
	}

});