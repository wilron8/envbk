/*
 * File: envitz/view/joinService.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.joinService', {
	extend: 'Ext.window.Window',
	alias: 'widget.joinservice',

	requires: [
		'Ext.form.Panel',
		'Ext.form.field.Hidden',
		'Ext.form.field.Text',
		'Ext.button.Button'
	],

	height: 155,
	maxHeight: 165,
	maxWidth: 500,
	minHeight: 150,
	minWidth: 100,
	width: 400,
	layout: 'anchor',
	title: 'JOIN Linspira.com',
	titleAlign: 'center',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'form',
					itemId: 'joinForm',
					defaults: {
						labelWidth: 50
					},
					bodyPadding: 10,
					layout: {
						type: 'vbox',
						align: 'stretch'
					},
					items: [
						{
							xtype: 'hiddenfield',
							name: 'x'
						},
						{
							xtype: 'hiddenfield',
							name: 'y'
						},
						{
							xtype: 'textfield',
							fieldLabel: 'Name',
							name: 'join_fName',
							allowBlank: false,
							minLength: 2
						},
						{
							xtype: 'textfield',
							fieldLabel: 'Email',
							name: 'join_email',
							inputType: 'email',
							allowBlank: false,
							minLength: 4,
							vtype: 'email',
							vtypeText: 'Please use a valid email.'
						}
					]
				},
				{
					xtype: 'button',
					height: 30,
					margin: '10 0 0 15',
					width: 100,
					text: 'JOIN',
					listeners: {
						click: {
							fn: me.onJoinClick,
							scope: me
						}
					}
				}
			],
			listeners: {
				afterrender: {
					fn: me.onWindowAfterRender,
					scope: me
				}
			}
		});

		me.callParent(arguments);
	},

	onJoinClick: function(button, e, eOpts) {
		var me = this,
			userName,
			eMail,
			form = this.down("#joinForm");

		userName = form.down("[name=join_fName]").getValue();
		eMail = form.down("[name=join_email]").getValue();

		if (userName.length > 2 && eMail.length > 4) {

			button.setText("...");
			button.setDisabled(true);

			form.mask("Sending...");

			form.submit({
				standardSubmit: false,
				submitEmptyText: false,
				url: LApp.guestJoin,
				success: function (response) {
					var svrMsg = Ext.JSON.decode(response.responseText);

					//console.log(svrMsg);

					Alert("Join Request - Success", svrMsg.msg);
					form.unmask();
					button.setText("JOIN");
					button.setDisabled(false);

					me.close();
				},
				failure: function () {
					Alert("Join Request - Error", "There is an error in connection");
					button.setText("JOIN");
					button.setDisabled(false);
					form.unmask();
				}
			});
		}
	},

	onWindowAfterRender: function(component, eOpts) {
		var form = component.down("#joinForm"),
			xDPI, yDPI;


		//console.log(form);


		xDPI = form.down("[name=x]");
		yDPI = form.down("[name=y]");

		xDPI.setValue(LApp.width);
		yDPI.setValue(LApp.height);
	}

});