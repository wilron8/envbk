/*
 * File: envitz/view/userAddress.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.userAddress', {
	extend: 'Ext.container.Container',
	alias: 'widget.userAddress',

	requires: [
		'envitz.view.ComboSearchMultiFields',
		'Ext.form.field.ComboBox',
		'Ext.container.Container'
	],

	layout: {
		type: 'vbox',
		align: 'stretch',
		defaultMargins: {
			top: 0,
			right: 10,
			bottom: 0,
			left: 0
		}
	},

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'textfield',
					flex: 1,
					margin: '0 0 5 0',
					fieldLabel: 'Address',
					name: 'uAddr_address1',
					emptyText: 'Street Address 1',
					enforceMaxLength: true,
					maxLength: 128,
					minLength: 3,
					selectOnFocus: true
				},
				{
					xtype: 'textfield',
					flex: 1,
					fieldLabel: '&nbsp;',
					labelSeparator: '&nbsp;',
					name: 'uAddr_address2',
					emptyText: 'Street Address 2 ( Optional )',
					enforceMaxLength: true,
					maxLength: 128,
					selectOnFocus: true
				},
				{
					xtype: 'combobox',
					listConfig: {
						loadingText: 'Populating list...',
						//emptyText: "Wikipedia has no Cities?",
						getInnerTpl: function() {
							return '<tpl for="."><div data-qtip="[{geoCity_id}] {geoCity_ISO3166}"> {geoCity_cityName}</div></tpl>';
						}
					},
					flex: 2,
					maxHeight: 400,
					fieldLabel: '&nbsp;',
					labelSeparator: '&nbsp;',
					name: 'uAddr_city',
					blankText: 'Please select your city or type it in.',
					emptyText: 'City',
					anyMatch: true,
					displayField: 'geoCity_cityName',
					queryDelay: 150,
					store: 'cities',
					valueField: 'geoCity_id'
				},
				{
					xtype: 'container',
					flex: 1,
					layout: {
						type: 'hbox',
						align: 'stretch',
						defaultMargins: {
							top: 0,
							right: 10,
							bottom: 05,
							left: 0
						}
					},
					items: [
						{
							xtype: 'combosearchmultifields',
							listConfig: {
								loadingText: 'Populating list...',
								//emptyText: "Wikipedia has no States/Provences?",
								getInnerTpl: function() {
									return '<tpl for="."><div data-qtip="[{geoStateCity_id}] {geoStateCity_ISO3166_2} / {geoStateCity_roman}"> {geoStateCity_cityState}</div></tpl>';
								}
							},
							searchFields: [
								'geoStateCity_cityState',
								'geoStateCity_roman',
								'geoStateCity_demonym',
								'geoStateCity_ISO3166'
							],
							maxHeight: 400,
							width: 408,
							fieldLabel: '&nbsp;',
							labelSeparator: '&nbsp;',
							name: 'uAddr_state',
							blankText: 'Please select a State/Province',
							emptyText: 'State / Province',
							displayField: 'geoStateCity_cityState',
							queryDelay: 150,
							store: 'stateCity',
							valueField: 'geoStateCity_id'
						},
						{
							xtype: 'combobox',
							name: 'uAddr_ZIP',
							blankText: 'Type in your Postal / ZIP code.',
							emptyText: 'Zip / Postal code',
							enforceMaxLength: true,
							maskRe: /[\w\-\+_A-Za-z0-9\.]/,
							selectOnFocus: true,
							anyMatch: true,
							queryMode: 'local',
							store: 'zipCodes',
							valueField: 'text'
						}
					]
				},
				{
					xtype: 'combosearchmultifields',
					displayTpl: '<tpl for=".">{geoContinent_region} / {geoCountry_roman} ( {geoCountry_name} )</tpl>',
					listConfig: {
						loadingText: 'Populating list...',
						//emptyText: "Wikipedia has no Countries?",
						getInnerTpl: function() {
							return '<tpl for="."><div data-qtip="[{geoCountry_id}] {geoContinent_region} / {geoCountry_roman}">{geoContinent_region} / {geoCountry_name} <IMG style="float:right" src="/images/icons/flags/{geoCountry_flagImg}" /></div></tpl>';
						}
					},
					searchFields: [
						'geoCountry_roman',
						'geoCountry_name',
						'geoCountry_ISO3166',
						'geoContinent_region'
					],
					itemId: 'addrCountry',
					maxHeight: 400,
					fieldLabel: '&nbsp;',
					labelSeparator: '&nbsp;',
					name: 'uAddr_country',
					blankText: 'Please select a country.',
					emptyText: 'Select Country',
					displayField: 'geoCountry_name',
					store: 'countries',
					valueField: 'geoCountry_id',
					valueNotFoundText: 'Please select from the list of Countries'
				}
			]
		});

		me.callParent(arguments);
	}

});