/*
 * File: envitz/view/Idea.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.Idea', {
	extend: 'Ext.container.Container',

	requires: [
		'envitz.view.imagePreviewer',
		'envitz.view.BoxSelect',
		'Ext.tab.Panel',
		'Ext.form.Panel',
		'Ext.form.field.Hidden',
		'Ext.tab.Tab',
		'Ext.form.field.ComboBox',
		'Ext.form.field.HtmlEditor',
		'Ext.Img',
		'Ext.form.field.Checkbox',
		'Ext.form.field.Display',
		'Ext.form.Label',
		'Ext.view.View',
		'Ext.XTemplate',
		'Ext.ux.form.field.BoxSelect'
	],

	border: false,
	padding: 10,
	width: 774,

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			style: {
				backgroundColor: '#fff'
			},
			items: [
				{
					xtype: 'tabpanel',
					tabBar: {
						xtype: 'tabbar',
						border: 0,
						minWidth: 100,
						plain: true,
						layout: {
							type: 'hbox',
							align: 'stretch',
							pack: 'end'
						}
					},
					border: 0,
					itemId: 'TabPanel',
					defaults: {
						anchor: '100%'
					},
					activeTab: 0,
					minTabWidth: 100,
					plain: true,
					items: [
						{
							xtype: 'form',
							itemId: 'submitForm',
							defaults: {
								//anchor: '100%',
								padding: '5px'
							},
							bodyBorder: true,
							bodyPadding: 5,
							title: 'Edit',
							items: [
								me.processMAX_FILE_SIZE({
									xtype: 'hiddenfield',
									itemId: 'MAX_FILE_SIZE',
									fieldLabel: 'Label',
									name: 'MAX_FILE_SIZE'
								}),
								{
									xtype: 'container',
									layout: {
										type: 'hbox',
										align: 'stretch'
									},
									items: [
										{
											xtype: 'imagePreview',
											name: 'idea_img',
											src: '/images/lightBulb.svg',
											itemId: 'ideaIMG'
										},
										{
											xtype: 'container',
											margins: '0 0 0 10',
											items: [
												{
													xtype: 'textfield',
													height: 22,
													maxHeight: 22,
													minWidth: 300,
													name: 'idea_title',
													allowBlank: false,
													blankText: 'Idea title is required.',
													emptyText: 'Title of your idea',
													enforceMaxLength: true,
													maxLength: 128,
													minLength: 2,
													vtype: 'NoTags'
												},
												{
													xtype: 'combobox',
													height: 22,
													itemId: 'categoryDisplay',
													margin: '10 0 0 0',
													maxHeight: 22,
													minWidth: 300,
													name: 'idea_categoryID',
													emptyText: 'Idea Category',
													displayField: 'cat_text',
													queryMode: 'local',
													store: 'category',
													valueField: 'cat_id'
												}
											]
										}
									]
								},
								{
									xtype: 'container',
									layout: {
										type: 'hbox',
										align: 'stretch'
									},
									items: [
										{
											xtype: 'htmleditor',
											flex: 3,
											margins: '0 10 0 0',
											height: 150,
											minWidth: 300,
											anchorSize: 1,
											fieldLabel: '',
											name: 'idea_descript',
											enableFont: false,
											enableSourceEdit: false
										},
										{
											xtype: 'container',
											flex: 1,
											minWidth: 330,
											items: [
												{
													xtype: 'textfield',
													itemId: 'youtubeLink',
													margin: '0 0 5 0',
													minWidth: 330,
													width: 330,
													fieldLabel: '',
													name: 'idea_attachment',
													emptyText: 'Youtube link'
												},
												{
													xtype: 'container',
													height: 200,
													itemId: 'formYoutube',
													items: [
														me.processYoutubeImg({
															xtype: 'image',
															height: 200,
															itemId: 'youtubeImg',
															minWidth: 330,
															width: 330,
															src: 'no-image.png'
														})
													]
												}
											]
										}
									]
								},
								{
									xtype: 'container',
									items: [
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'boxselect',
													listConfig: {
														tpl: [
															'<tpl for=".">',
															'<div role="option" class="x-boundlist-item" style="background-image:url({idea_img}); background-repeat: no-repeat; background-size: 32px; padding:10px 0 0 38px;height:32px;">{idea_title}</div>',
															'</tpl>'
														]
													},
													labelTpl: '<img src=\"{idea_img}\" style=\"height: 32px; vertical-align: middle; margin: 2px;\" /> {idea_title}',
													itemId: 'idea_reference',
													maxWidth: 400,
													minHeight: 60,
													width: 400,
													fieldLabel: 'Idea Reference(s)',
													labelAlign: 'top',
													name: 'reference[]',
													displayField: 'idea_title',
													queryMode: 'local',
													store: 'idea',
													valueField: 'idea_id',
													flex: 1
												},
												{
													xtype: 'container',
													flex: 1,
													margins: '0 0 0 10',
													disabled: true,
													html: '<i>What idea inspired this idea?</i><br><b>Note: </b> If this is your original idea, then just leave this blank.'
												}
											]
										},
										{
											xtype: 'container',
											items: [
												{
													xtype: 'container',
													layout: {
														type: 'hbox',
														align: 'stretch'
													}
												}
											]
										}
									]
								},
								{
									xtype: 'checkboxfield',
									itemId: 'idea_legalAccept',
									margin: '15 0 0 0 0',
									fieldLabel: '',
									name: 'idea_legalAccept',
									boxLabel: 'I agree to <A class="term_of_service" href="/legal/tos.php" >terms of service</A>. By publishing my idea, I permit all Linspira users to reference my idea royalty free.',
									inputValue: '1'
								}
							]
						},
						{
							xtype: 'panel',
							itemId: 'previewTab',
							defaults: {
								padding: '5px'
							},
							title: 'Preview',
							items: [
								{
									xtype: 'form',
									border: false,
									itemId: 'displayForm',
									padding: '5 5 10 5',
									bodyBorder: false,
									frameHeader: false,
									header: false,
									title: 'Preview',
									items: [
										{
											xtype: 'container',
											margin: '0 0 5 0',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												me.processPreviewImg({
													xtype: 'image',
													height: 64,
													itemId: 'previewImg',
													maxHeight: 64,
													minWidth: 64,
													width: 64,
													src: '/images/lightBulb.svg'
												}),
												{
													xtype: 'displayfield',
													margins: '0 5 0 5',
													itemId: 'title_preview',
													fieldLabel: '',
													name: 'idea_title',
													value: 'Display Field'
												},
												{
													xtype: 'displayfield',
													flex: 1,
													margins: '0 0 0 5',
													itemId: 'displayCategory',
													fieldLabel: ''
												}
											]
										},
										{
											xtype: 'container',
											margin: '0 0 5 0',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'container',
													height: 200,
													itemId: 'displayYoutube',
													width: 400,
													items: [
														me.processPreviewYoutube({
															xtype: 'image',
															height: 201,
															itemId: 'previewYoutube',
															width: 330,
															src: 'no-image.png'
														})
													]
												},
												{
													xtype: 'displayfield',
													fieldLabel: '',
													name: 'idea_descript',
													value: 'Display Field'
												}
											]
										},
										{
											xtype: 'container',
											layout: {
												type: 'hbox',
												align: 'stretch'
											},
											items: [
												{
													xtype: 'container',
													minWidth: 300,
													items: [
														{
															xtype: 'label',
															style: {
																textDecoration: 'underline',
																fontSize: 'large'
															},
															text: 'Evolution'
														},
														{
															xtype: 'container',
															itemId: 'evolutionHolder',
															margin: '5 0 0 0',
															items: [
																{
																	xtype: 'container',
																	itemId: 'ascending',
																	items: [
																		{
																			xtype: 'label',
																			text: 'None ascending'
																		}
																	]
																},
																{
																	xtype: 'container',
																	itemId: 'descending',
																	items: [
																		{
																			xtype: 'label',
																			text: 'None descending'
																		}
																	]
																}
															]
														}
													]
												},
												{
													xtype: 'container',
													width: 400,
													layout: {
														type: 'vbox',
														align: 'stretch'
													},
													items: [
														{
															xtype: 'label',
															flex: 1,
															height: 24,
															maxHeight: 24,
															style: {
																textDecoration: 'underline',
																fontSize: 'large'
															},
															text: 'Reference'
														},
														{
															xtype: 'dataview',
															deferEmptyText: false,
															emptyText: '<i>(No reference. Is this the original idea?)</i>',
															itemSelector: 'div.item',
															itemTpl: [
																'<div class="item"><img width="34" src="{idea_img}" /> <a href="{url}" target="_blank">{idea_title}</a>',
																'	',
																'</div>'
															],
															store: 'ideaRef'
														}
													]
												}
											]
										},
										{
											xtype: 'label',
											style: {
												textDecoration: 'underline',
												fontSize: 'large'
											},
											text: 'Project:'
										},
										{
											xtype: 'dataview',
											margin: '5 0 0 0',
											deferEmptyText: false,
											emptyText: '<i>(No project yet. Be sure to create one after you submit this idea!)</i>',
											itemSelector: 'div.item',
											itemTpl: [
												'<div class="item">',
												'	<img src="{proj_img}" width="32" />',
												'	<a href="{url}" target="_blank">{proj_title}</a>',
												'</div>'
											],
											store: 'ideaProject'
										}
									]
								}
							]
						}
					]
				},
				{
					xtype: 'container',
					margin: '30 0 0 100',
					padding: 5,
					items: [
						{
							xtype: 'button',
							itemId: 'btnSubmitIdea',
							minWidth: 100,
							text: 'Save'
						},
						{
							xtype: 'button',
							itemId: 'btnCancelIdea',
							margin: '0 0 0 20',
							minWidth: 100,
							text: 'Cancel'
						}
					]
				}
			]
		});

		me.callParent(arguments);
	},

	processMAX_FILE_SIZE: function(config) {
		config.value=LApp.MAX_FILE_SIZE;
		return config;
	},

	processYoutubeImg: function(config) {
		config.src=LApp.basePath+'/images/img_idea.png';
		return config;
	},

	processPreviewImg: function(config) {
		if (LApp.imageSrc) {
			config.src = LApp.imageSrc;
		} else {
			config.src = "/images/lightBulb.svg";
		}

		return config;

	},

	processPreviewYoutube: function(config) {
		config.src=LApp.basePath+'/images/img_idea.png';
		return config;
	}

});