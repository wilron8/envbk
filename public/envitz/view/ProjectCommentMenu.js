/*
 * File: envitz/view/ProjectCommentMenu.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.ProjectCommentMenu', {
	extend: 'Ext.button.Button',

	requires: [
		'Ext.menu.Menu',
		'Ext.menu.Item',
		'envitz.view.RemoveComment',
		'envitz.view.ReportViolation'
	],

	commentId: '',
	commentCreator: '',
	commentWarning: '',
	commentAlert: '',
	arrowAlign: 'bottom',
	arrowCls: ' ',
	iconAlign: 'top',
	iconCls: 'icon-dropdown',
	menuAlign: 'tr-br?',
	scale: 'large',
	text: '',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			menu: {
				xtype: 'menu',
				width: 120,
				items: [
					me.processRemove({
						xtype: 'menuitem',
						handler: function(item, e) {
							var window = Ext.create('envitz.view.RemoveComment',{
								commenter: me.commenter,
								ideaId: me.ideaId,
								comment: me.comment,
								url: LApp.basePath + '/idea/deleteComment/' + me.ideaId + '?comment=' + me.commentId,
								selector: me.selector
							});

							window.show();
						},
						text: 'Remove'
					}),
					me.processReportviolation({
						xtype: 'menuitem',
						handler: function(item, e) {
							var window = Ext.create('envitz.view.ReportViolation', {
								commenter: me.commenter,
								comment: me.comment,
								commentId: me.commentId,
								url: LApp.basePath + '/idea/reportComment/' + me.commentId
							});

							window.show();
						},
						text: 'Report violation'
					})
				]
			}
		});

		me.processCommentMenu(me);
		me.callParent(arguments);
	},

	processRemove: function(config) {
		if (this.isOwner !== 1) {
			config.hidden=true;
		}

		config.scope = this;
		return config;
	},

	processReportviolation: function(config) {
		if (this.isCommenter === 1) {
			config.hidden = true;
		}

		config.scope = this;
		return config;
	},

	processCommentMenu: function(config) {
		var dom = Ext.get(this.selector);

		config.commenter = dom.getAttribute('data-commenter');
		config.isCommenter = dom.getAttribute('data-isCommenter');
		config.isOwner = dom.getAttribute('data-isOwner');
		config.comment = dom.getAttribute('data-comment');
		config.commentId = dom.getAttribute('data-commentId');
		config.projectId = dom.getAttribute('data-projectId');
	}

});