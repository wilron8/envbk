/*
 * File: envitz/view/imagePreviewer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('envitz.view.imagePreviewer', {
	extend: 'Ext.container.Container',
	alias: 'widget.imagePreview',

	requires: [
		'Ext.Img',
		'Ext.form.field.File'
	],

	height: 64,
	minWidth: 64,
	width: 64,
	layout: 'absolute',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				me.processUserImage({
					xtype: 'image',
					itemId: 'userImage',
					src: 'no-image.png'
				}),
				me.processImageUploader({
					xtype: 'filefield',
					x: 40,
					y: 40,
					frame: false,
					height: 20,
					fieldLabel: '',
					buttonOnly: true,
					buttonText: '...',
					listeners: {
						change: {
							fn: me.onIMGchange,
							scope: me
						}
					}
				})
			]
		});

		me.callParent(arguments);
	},

	processUserImage: function(config) {
		var me = this;

		config.width = me.width;
		config.minWidth = me.minWidth;
		config.height = me.height;

		if (LApp.imageSrc) {
			config.src = LApp.imageSrc;
		} else {
			config.src = me.src; // "/images/lightBulb.svg";
		}

		return config;
	},

	processImageUploader: function(config) {
		var me = this;

		config.x = me.width - 20 - 3; // 20 is width and 3 is margin
		config.y = me.height - 20 - 3;
		config.name = me.name;

		return config;
	},

	onIMGchange: function(filefield, value, eOpts) {
		var me = this,
			panel = me.up('tabpanel'),
			reader, file, filecontent;
			
			
		if (filefield.getEl().down('input[type="file"]').dom.files[0]) {

			reader = new FileReader();
			file = filefield.getEl().down('input[type="file"]').dom.files[0];
			filecontent = reader.readAsBinaryString(file);
			reader.onload = function(e) {

				me.down('#userImage').setSrc(e.target.result);

				if(panel && panel.down('#previewImg')){
					panel.down('#previewImg').setSrc(e.target.result);
				}				

				if( filefield.getEl().down('input[type="file"]').dom.files[0] ) {					
					reader.readAsDataURL(filefield.getEl().down('input[type="file"]').dom.files[0]);
				} 
				
								

			};
		}
	}

});